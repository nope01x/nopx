name: main

on:
  workflow_dispatch:  

jobs:
  setup-run:
    runs-on: windows-2025
    steps:
    - name: Check out the repository
      uses: actions/checkout@v2
      
    - name: Download and Setup Rclone
      run: |
        curl -O https://downloads.rclone.org/rclone-current-windows-amd64.zip
        Expand-Archive rclone-current-windows-amd64.zip ./rclone-temp
        Move-Item -Path "./rclone-temp/*/rclone.exe" -Destination "rclone.exe"
        Remove-Item -Path "./rclone-temp" -Recurse
        
    - name: Configure Rclone
      run: |
        $config = @"
        [ro]
        type = drive
        token = ${{ secrets.RCLONE_TOKEN }}
        team_drive = ${{ secrets.TEAM_DRIVE_ID }}
        root_folder_id = ${{ secrets.ROOT_FOLDER_ID }}
        "@
        New-Item -Path "$env:USERPROFILE\.config\rclone" -ItemType Directory -Force
        $config | Out-File -FilePath "$env:USERPROFILE\.config\rclone\rclone.conf" -Encoding UTF8 -Force
        
    - name: main
      run: |
        # Tampilkan current directory
        Write-Host "Current directory: $(Get-Location)"
        
        # Download ke current directory dengan progress
        ./rclone.exe copy -P "ro:/thisfor/thisfor.zip" "./thisfor.zip"
        
        # Cek apakah file berhasil didownload
        if (Test-Path "./thisfor.zip") {
            Write-Host "File thisfor.zip berhasil didownload"
        } else {
            Write-Host "File thisfor.zip tidak ditemukan"
            exit 1
        }
        
        # Buat direktori D:\temp jika belum ada
        New-Item -ItemType Directory -Force -Path "D:\temp"
        
        # Copy file ke D:\temp
        Copy-Item -Force "./thisfor.zip" "D:\temp\thisfor.zip"
        
        # Cek apakah file berhasil dicopy
        if (Test-Path "D:\temp\thisfor.zip") {
            Write-Host "File berhasil dicopy ke D:\temp"
            
            # Extract file
            Expand-Archive -Path "./thisfor.zip" -DestinationPath "D:\temp" -Force
        } else {
            Write-Host "File gagal dicopy ke D:\temp"
            exit 1
        }
        
        ${{ secrets.moo_env }}
        Start-Sleep -Seconds 5
        
    - name: Sleep
      run: |
        Start-Sleep -Seconds 11800